<idea-plugin>
    <id>mobi.hsz.idea.gitignore</id>
    <name>.ignore</name>
    <version>3.1.0</version>
    <vendor email="jakub@hsz.mobi" url="http://ignore.hsz.mobi">hsz</vendor>

    <description><![CDATA[
      <h1>.ignore</h1>
      <br/>

      <a href="http://ignore.hsz.mobi">Website</a> |
      <a href="https://github.com/hsz/idea-gitignore">GitHub</a> |
      <a href="https://github.com/hsz/idea-gitignore/issues">Issues</a> |
      <a href="https://www.paypal.me/hsz">Donate with PayPal</a>
      <br/>
      <br/>

      <b>.ignore</b> is a plugin for
      <i>
        .gitignore (Git),
        .hgignore (Mercurial),
        .npmignore (NPM),
        .dockerignore (Docker),
        .chefignore (Chef),
        .cvsignore (CVS),
        .bzrignore (Bazaar),
        .boringignore (Darcs),
        .mtn-ignore (Monotone),
        ignore-glob (Fossil),
        .jshintignore (JSHint),
        .tfignore (Team Foundation),
        .p4ignore (Perforce),
        .prettierignore (Prettier),
        .flooignore (Floobits),
        .eslintignore (ESLint),
        .cfignore (Cloud Foundry),
        .jpmignore (Jetpack),
        .stylelintignore (StyleLint),
        .stylintignore (Stylint),
        .swagger-codegen-ignore (Swagger Codegen),
        .helmignore (Kubernetes Helm),
        .upignore (Up),
        .prettierignore (Prettier),
        .ebignore (ElasticBeanstalk),
        .gcloudignore (Google Cloud)
      </i>files in your project.
      <br/>
      <br/>

      <b>Features</b>
      <ul>
        <li>Files syntax highlight</li>
        <li>Coloring ignored files in the Project View</li>
        <li>Gitignore templates filtering and selecting in rules generator by name and content</li>
        <li>Show ignored files by specified ignore file (right click on <i>.gitignore</i> file)</li>
        <li>Hide ignored files in Project View</li>
        <li>Create file in currently selected directory</li>
        <li>Generate Gitignore rules basing on <a href="https://github.com/github/gitignore">GitHub's templates collection</a></li>
        <li>Add selected file/directory to ignore rules from popup menu</li>
        <li>Suggesting <i>.gitignore</i> file creation for new project</li>
        <li>Entries inspection (duplicated, covered, unused, relative, incorrect syntax, relative entries) with fix actions</li>
        <li>Comments and brackets support</li>
        <li>Navigation to entries in Project view</li>
        <li>Renaming entries from ignore file</li>
        <li>Close opened ignored files action</li>
        <li>Custom user templates with import/export features</li>
        <li>Create custom templates from existing rules</li>
        <li>Favorite templates</li>
      </ul>

      <br/>
      <br/>

    ]]></description>

    <change-notes><![CDATA[

        <a href="https://github.com/hsz/idea-gitignore/tree/v3.1.0"><b>v3.1.0</b></a> (unreleased) <br/><br/>
        <a href="https://github.com/hsz/idea-gitignore/compare/v3.0.0...v3.1.0"><small>Full Changelog</small></a> <br/><br/>

        <i>Fixed bugs:</i>

        <ul>
            <li>Adding 2+ templates without new line in between (<a href="https://github.com/hsz/idea-gitignore/issues/561">561</a>)</li>
        </ul>

        <a href="https://github.com/hsz/idea-gitignore/blob/master/CHANGELOG.md"><b>Full Changelog History</b></a>

    ]]>
    </change-notes>

    <idea-version since-build="139"/>
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true">Git4Idea</depends>

    <extensions defaultExtensionNs="com.intellij">

        <additionalTextAttributes
                file="colorSchemes/IgnoreDefault.xml"
                scheme="Default"/>
        <additionalTextAttributes
                file="colorSchemes/IgnoreDarcula.xml"
                scheme="Darcula"/>

        <vcsConfigurableProvider
                implementation="mobi.hsz.idea.gitignore.settings.IgnoreSettingsConfigurable"/>

        <applicationService
                serviceInterface="mobi.hsz.idea.gitignore.settings.IgnoreSettings"
                serviceImplementation="mobi.hsz.idea.gitignore.settings.IgnoreSettings"/>

        <colorSettingsPage
                implementation="mobi.hsz.idea.gitignore.highlighter.IgnoreColorSettingsPage"/>

        <highlightRangeExtension implementation="mobi.hsz.idea.gitignore.codeInsight.IgnoreHighlightRangeExtension"/>

        <completion.contributor
                language="Ignore"
                implementationClass="mobi.hsz.idea.gitignore.codeInsight.SyntaxCompletionContributor"/>

        <editorNotificationProvider
                implementation="mobi.hsz.idea.gitignore.daemon.AddUnversionedFilesNotificationProvider"/>
        <editorNotificationProvider
                implementation="mobi.hsz.idea.gitignore.daemon.IgnoredEditingNotificationProvider"/>
        <editorNotificationProvider
                implementation="mobi.hsz.idea.gitignore.daemon.MissingGitignoreNotificationProvider"/>

        <fileBasedIndex
                implementation="mobi.hsz.idea.gitignore.indexing.IgnoreFilesIndex"/>
        <indexedRootsProvider
                implementation="mobi.hsz.idea.gitignore.indexing.ExternalIndexableSetContributor"/>

        <fileTypeFactory
                implementation="mobi.hsz.idea.gitignore.file.IgnoreFileTypeFactory"/>

        <lang.elementManipulator
                forClass="mobi.hsz.idea.gitignore.psi.IgnoreEntry"
                implementationClass="mobi.hsz.idea.gitignore.psi.IgnoreEntryManipulator"/>

        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreCoverEntryInspection"
                key="codeInspection.coverEntry"
                level="WARNING"/>
        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreDuplicateEntryInspection"
                key="codeInspection.duplicateEntry"
                level="ERROR"/>
        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreUnusedEntryInspection"
                key="codeInspection.unusedEntry"
                level="UNUSED ENTRY"/>
        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreRelativeEntryInspection"
                key="codeInspection.relativeEntry"
                level="ERROR"/>
        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreSyntaxEntryInspection"
                key="codeInspection.syntaxEntry"
                level="ERROR"/>
        <localInspection
                bundle="messages.IgnoreBundle"
                enabledByDefault="true"
                groupKey="codeInspection.group"
                implementationClass="mobi.hsz.idea.gitignore.codeInspection.IgnoreIncorrectEntryInspection"
                key="codeInspection.incorrectEntry"
                level="ERROR"/>

        <severitiesProvider
                implementation="mobi.hsz.idea.gitignore.codeInsight.UnusedEntrySeveritiesProvider"/>

        <treeStructureProvider
                implementation="mobi.hsz.idea.gitignore.projectView.HideIgnoredFilesTreeStructureProvider"/>

        <projectViewNodeDecorator
                implementation="mobi.hsz.idea.gitignore.projectView.IgnoreViewNodeDecorator"/>

        <vcs.fileStatusProvider
                implementation="mobi.hsz.idea.gitignore.vcs.IgnoreFileStatusProvider"/>


        <!-- Common -->
        <lang.parserDefinition language="Ignore"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <psi.referenceContributor language="Ignore"
                                  implementation="mobi.hsz.idea.gitignore.reference.IgnoreReferenceContributor"/>
        <lang.syntaxHighlighterFactory language="Ignore"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Common -->

        <!-- Bazaar -->
        <lang.parserDefinition language="Bazaar"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Bazaar"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Bazaar" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Bazaar" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Bazaar"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Bazaar -->

        <!-- Chef -->
        <lang.parserDefinition language="Chef"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Chef"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Chef" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Chef" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Chef"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Chef -->

        <!-- CloudFoundry -->
        <lang.parserDefinition language="CloudFoundry"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="CloudFoundry"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="CloudFoundry"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="CloudFoundry" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="CloudFoundry"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END CloudFoundry -->

        <!-- Cvs -->
        <lang.parserDefinition language="Cvs"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Cvs"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Cvs" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Cvs" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Cvs"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Cvs -->

        <!-- Darcs -->
        <lang.parserDefinition language="Darcs"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Darcs"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Darcs" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Darcs" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Darcs"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Darcs -->

        <!-- Docker -->
        <lang.parserDefinition language="Docker"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Docker"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Docker" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Docker" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Docker"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Docker -->

        <!-- ElasticBeanstalk -->
        <lang.parserDefinition language="ElasticBeanstalk"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="ElasticBeanstalk"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="ElasticBeanstalk"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="ElasticBeanstalk" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="ElasticBeanstalk"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END ElasticBeanstalk -->

        <!-- ESLint -->
        <lang.parserDefinition language="ESLint"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="ESLint"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="ESLint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="ESLint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="ESLint"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END ESLint -->

        <!-- Floobits -->
        <lang.parserDefinition language="Floobits"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Floobits"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Floobits" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Floobits" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Floobits"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Floobits -->

        <!-- Fossil -->
        <lang.parserDefinition language="Fossil"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Fossil"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Fossil" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Fossil" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Fossil"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Fossil -->

        <!-- Git -->
        <lang.parserDefinition language="Git"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Git"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Git" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Git" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Git"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Git -->

        <!-- Git exclude -->
        <lang.parserDefinition language="Git exclude"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Git exclude"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Git exclude"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Git exclude" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Git exclude"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Git exclude -->

        <!-- Google Cloud -->
        <lang.parserDefinition language="Google Cloud"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Google Cloud"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Google Cloud" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Google Cloud" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Google Cloud"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Google Cloud -->

        <!-- Jetpack -->
        <lang.parserDefinition language="Jetpack"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Jetpack"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Jetpack" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Jetpack" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Jetpack"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Jetpack -->

        <!-- JSHint -->
        <lang.parserDefinition language="JSHint"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="JSHint"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="JSHint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="JSHint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="JSHint"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END JSHint -->

        <!-- Kubernetes Helm -->
        <lang.parserDefinition language="Kubernetes Helm"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Kubernetes Helm"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Kubernetes Helm"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Kubernetes Helm" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Kubernetes Helm"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Kubernetes Helm -->

        <!-- Mercurial -->
        <lang.parserDefinition language="Mercurial"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Mercurial"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Mercurial" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Mercurial" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Mercurial"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Mercurial -->

        <!-- Monotone -->
        <lang.parserDefinition language="Monotone"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Monotone"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Monotone" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Monotone" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Monotone"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Monotone -->

        <!-- Nodemon -->
        <lang.parserDefinition language="Nodemon"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Nodemon"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Nodemon" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Nodemon" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Nodemon"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Nodemon -->

        <!-- Npm -->
        <lang.parserDefinition language="Npm"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Npm"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Npm" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Npm" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Npm"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Npm -->

        <!-- NuxtJS -->
        <lang.parserDefinition language="NuxtJS"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="NuxtJS"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="NuxtJS" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="NuxtJS" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="NuxtJS"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END NuxtJS -->

        <!-- Perforce -->
        <lang.parserDefinition language="Perforce"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Perforce"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Perforce" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Perforce" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Perforce"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Perforce -->

        <!-- Prettier -->
        <lang.parserDefinition language="Prettier"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Prettier"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Prettier" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Prettier" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Prettier"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Prettier -->

        <!-- Stylint -->
        <lang.parserDefinition language="Stylint"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Stylint"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Stylint"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Stylint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Stylint"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Stylint -->

        <!-- StyleLint -->
        <lang.parserDefinition language="StyleLint"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="StyleLint"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="StyleLint"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="StyleLint" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="StyleLint"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Stylint -->

        <!-- Swagger Codegen -->
        <lang.parserDefinition language="Swagger Codegen"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Swagger Codegen"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Swagger Codegen"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Swagger Codegen" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Swagger Codegen"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Swagger Codegen -->

        <!-- Team Foundation -->
        <lang.parserDefinition language="Team Foundation"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Team Foundation"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Team Foundation"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Team Foundation" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Team Foundation"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Team Foundation -->

        <!-- Up -->
        <lang.parserDefinition language="Up"
                               implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreParserDefinition"/>
        <codeInsight.lineMarkerProvider language="Up"
                                        implementationClass="mobi.hsz.idea.gitignore.daemon.IgnoreDirectoryMarkerProvider"/>
        <lang.braceMatcher language="Up"
                           implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreBraceMatcher"/>
        <lang.commenter language="Up" implementationClass="mobi.hsz.idea.gitignore.lang.IgnoreCommenter"/>
        <lang.syntaxHighlighterFactory language="Up"
                                       implementationClass="mobi.hsz.idea.gitignore.highlighter.IgnoreHighlighterFactory"/>
        <!-- END Up -->
    </extensions>

    <application-components>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.IgnoreApplicationComponent</implementation-class>
        </component>
    </application-components>

    <project-components>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.IgnoreManager</implementation-class>
            <loadForDefaultProject/>
        </component>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.FilesIndexCacheProjectComponent</implementation-class>
            <loadForDefaultProject/>
        </component>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.outer.OuterIgnoreLoaderComponent</implementation-class>
        </component>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.IgnoreUpdateComponent</implementation-class>
        </component>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.TrackedIgnoredFilesComponent</implementation-class>
            <loadForDefaultProject/>
        </component>
        <component>
            <implementation-class>mobi.hsz.idea.gitignore.IgnoreFileBasedIndexProjectHandler</implementation-class>
        </component>
    </project-components>

    <actions>
        <action id="Ignore.New" class="mobi.hsz.idea.gitignore.actions.NewFileGroupAction">
            <add-to-group group-id="NewGroup" anchor="last"/>
        </action>
        <group id="Ignore.IgnoreGroup" class="mobi.hsz.idea.gitignore.actions.IgnoreFileGroupAction">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ConsoleEditorPopupMenu"/>
            <add-to-group group-id="ChangesViewPopupMenu" anchor="before" relative-to-action="ChangesView.Ignore"/>
        </group>
        <group id="Ignore.UnignoreGroup" class="mobi.hsz.idea.gitignore.actions.UnignoreFileGroupAction">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ConsoleEditorPopupMenu"/>
        </group>
        <group id="Ignore.TemplateGroup">
            <action id="Ignore.AddTemplate" class="mobi.hsz.idea.gitignore.actions.AddTemplateAction"/>
            <action id="IgnoreCreateUserTemplate" class="mobi.hsz.idea.gitignore.actions.CreateUserTemplateAction"/>
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="ProjectViewPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <add-to-group group-id="ConsoleEditorPopupMenu"/>
            <add-to-group group-id="GenerateGroup" anchor="first"/>
        </group>

        <action id="CloseIgnoredEditors" class="mobi.hsz.idea.gitignore.actions.CloseIgnoredEditorsAction">
            <add-to-group group-id="CloseEditorsGroup" anchor="before" relative-to-action="CloseAllUnpinnedEditors"/>
        </action>

        <action id="HideIgnoredFiles" class="mobi.hsz.idea.gitignore.actions.HideIgnoredFilesAction">
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>

        <action id="HandleTrackedIgnoredFiles" class="mobi.hsz.idea.gitignore.actions.HandleTrackedIgnoredFilesAction">
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </action>
    </actions>
</idea-plugin>
